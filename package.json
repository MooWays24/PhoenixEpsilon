{
  "name": "thirdeye",
  "version": "1.1.1",
  "productName": "ThirdEye",
  "description": "Two way chat between Discord and Minecraft Bedrock",
  "type": "module",
  "private": true,
  "devDependencies": {
    "@types/node": "22.10.1    ",
    "bedrock-protocol": "3.43.0",
    "discord.js": "14.15.3",
    "prettier": "3.4.2",
    "typescript": "5.7.2",
    "discord-api-types": "0.37.110",
    "minecraft-data": "3.84.1"
  },
  "prettier": {
    "trailingComma": "es5",
    "tabWidth": 4,
    "useTabs": false,
    "semi": true,
    "printWidth": 250
  },
  "scripts": {
    "format": "npx prettier --write --ignore-path .prettierignore ./",
    "linux//": " --- BUILD (Linux) --- ",
    "clean": "rm -rf .build/",
    "mkDirs": "mkdir -p .build",
    "copy:assets": "cp -R src/Install_NodeJS_Modules.bat src/Run.bat src/whitelist.json package.json LICENSE README.md .build",
    "build": "npm run clean; npm run mkDirs; ./node_modules/typescript/bin/tsc -p tsconfig.json; npm run copy:assets; node modify-package.js",
    "windows//": " --- BUILD (Windows) --- ",
    "clean_win": "rd /s /q .build>nul 2>&1|echo.>nul",
    "mkdir_win": "@if exist .build (rd /s /q .build && mkdir .build) else (mkdir .build)",
    "copy_assets_win": "@powershell Copy-Item -Path ^(\\\"src\\Install_NodeJS_Modules.bat\\\",\\\"src\\Run.bat\\\",\\\"src\\whitelist.json\\\",\\\"package.json\\\",\\\"LICENSE\\\",\\\"README.md\\\"^) -Destination \".build\" -Recurse",
    "build_win": "npm run clean_win && npm run mkdir_win 1>nul && node node_modules\\typescript\\bin\\tsc -p tsconfig.json && npm run copy_assets_win 1>nul && node modify-package.js",
    "bundle": "npm run build && mkdir -p dist && zip -r dist/thirdeye-v$(node -p \"require('./package.json').version\").zip .build local.env.example",
    "bundle_win": "npm run build_win && if not exist dist mkdir dist && powershell -Command \"Compress-Archive -Path (Join-Path -Path (Resolve-Path .build) -ChildPath *), local.env.example -DestinationPath dist/thirdeye-v$((Get-Content package.json | ConvertFrom-Json).version).zip -Force\"",
    "release:patch": "npm version patch && npm run bundle",
    "release:minor": "npm version minor && npm run bundle",
    "release:major": "npm version major && npm run bundle"
  },
  "dependencies": {
    "dotenv": "^16.4.7"
  }
}
